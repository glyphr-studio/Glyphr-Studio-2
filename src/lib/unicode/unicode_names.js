// import { log } from '../app/main.js';
import { validateAsHex } from '../../common/character_ids.js';
import { parseNumber } from '../../common/functions.js';
import { getParentRange } from './unicode_blocks.js';
import { unicodeNamesBMP, unicodeNonCharPointNames } from './unicode_names_0_bmp.js';
import { unicodeNamesSMP } from './unicode_names_1_smp.js';

/**
 * Gets the name of a Unicode character
 * @param {Number | String} id - Unicode code point
 * @returns {String} - name
 */
export function getUnicodeName(id) {
	// log('getUnicodeName', 'start');
	// log('passed ' + id);

	let name = '';
	let chn = 0;
	let codePoint = validateAsHex('' + id);
	let codePointSuffix = '[no id]';
	if (codePoint) {
		codePointSuffix = codePoint.substring(2);
		chn = parseNumber(codePoint);
	}

	if (!codePoint || codePointSuffix === '[no id]' || isNaN(chn)) {
		console.warn(`Could not get Unicode name for invalid code point: ${id}`);
		return '[name not found]';
	}
	// log('normalized ' + codePoint);

	if ((chn >= 0x4e00 && chn < 0xa000) || (chn >= 0x20000 && chn < 0x323af)) {
		name = `CJK Unified Ideograph ${codePointSuffix}`;
	} else if (chn < 0xffff) {
		name = unicodeNamesBMP[codePoint] || unicodeNonCharPointNames[codePoint] || '';
	} else if (chn >= 0x18b00 && chn <= 0x18cd5) {
		name = `Khitan Small Script Character ${codePointSuffix}`;
	} else if (chn >= 0x18800 && chn <= 0x18aff) {
		name = `Tangut Component ${chn - 0x18800 + 1}`;
	} else if (chn >= 0x1b170 && chn <= 0x1b2fb) {
		name = `Nushu Character ${codePointSuffix}`;
	} else if (chn < 0x1fbf9) {
		name = unicodeNamesSMP[codePoint] || '';
	} else if (chn < 0x1ffff) {
		let block = getParentRange(parseNumber(id));
		if (block) name = `${block.name} ${codePointSuffix}`;
	}

	// Default name is just the Unicode code point ID
	if (name === '') name = `U+${codePointSuffix.toUpperCase()}`;

	// log(`name: ${name}`);
	// log('getUnicodeName', 'end');
	return name;
}

/**
 * Gets a short name for a Unicode character, and if not,
 * returns the regular long name
 * @param {String | Number} codePoint - Hex String
 * @returns {string} - name
 */
export function getUnicodeShortName(codePoint) {
	// log('getUnicodeShortName', 'start');
	// log('passed ' + codePoint);
	if (typeof codePoint === 'number') {
		codePoint = '0x' + codePoint.toString(16);
	}

	let name = shortUnicodeNames[codePoint];
	if (!name) {
		name = getUnicodeName(codePoint);
		if (name)
			name = name
				.replace(/latin /gi, '')
				.replace(/ /g, '')
				.substr(0, 20);
	}

	if (!name) {
		name = `U+${codePoint.toUpperCase()}`;
	}

	// log(`name: ${name}`);

	// log('getUnicodeShortName', 'end');
	return name;
}

/**
 * Checks if a character is a whitespace character
 * @param {String} charID - hexadecimal character ID
 * @returns {Boolean}
 */
export function isWhitespace(charID) {
	// log(`isWhitespace`, 'start');
	// log(`charID: ${charID}`);
	// log(`whitespaceCharacters.indexOf(charID): ${whitespaceCharacters.indexOf(charID)}`);
	const validatedID = validateAsHex(charID);
	let result = validatedID ? whitespaceCharacters.indexOf(validatedID) > -1 : false;
	// log(`isWhitespace`, 'end');
	return result;
}

export const whitespaceCharacters = [
	'0x9',
	'0xA',
	'0xB',
	'0xC',
	'0xD',
	'0x20',
	'0x85',
	'0xA0',
	'0xAD',
	'0x1680',
	'0x2000',
	'0x2001',
	'0x2002',
	'0x2003',
	'0x2004',
	'0x2005',
	'0x2006',
	'0x2007',
	'0x2008',
	'0x2009',
	'0x200A',
	'0x2028',
	'0x2029',
	'0x202F',
	'0x205F',
	'0x3000',
	'0x180E',
	'0x200B',
	'0x200C',
	'0x200D',
	'0x2060',
	'0xFEFF',
];

export const shortUnicodeNames = {
	'0x0': '.null',
	'0x20': 'space',
	'0x21': 'exclam',
	'0x22': 'quotedbl',
	'0x23': 'numbersign',
	'0x24': 'dollar',
	'0x25': 'percent',
	'0x26': 'ampersand',
	'0x27': 'quotesingle',
	'0x28': 'parenleft',
	'0x29': 'parenright',
	'0x2A': 'asterisk',
	'0x2B': 'plus',
	'0x2C': 'comma',
	'0x2D': 'hyphen',
	'0x2E': 'period',
	'0x2F': 'slash',
	'0x30': 'zero',
	'0x31': 'one',
	'0x32': 'two',
	'0x33': 'three',
	'0x34': 'four',
	'0x35': 'five',
	'0x36': 'six',
	'0x37': 'seven',
	'0x38': 'eight',
	'0x39': 'nine',
	'0x3A': 'colon',
	'0x3B': 'semicolon',
	'0x3C': 'less',
	'0x3D': 'equal',
	'0x3E': 'greater',
	'0x3F': 'question',
	'0x40': 'at',
	'0x41': 'A',
	'0x42': 'B',
	'0x43': 'C',
	'0x44': 'D',
	'0x45': 'E',
	'0x46': 'F',
	'0x47': 'G',
	'0x48': 'H',
	'0x49': 'I',
	'0x4A': 'J',
	'0x4B': 'K',
	'0x4C': 'L',
	'0x4D': 'M',
	'0x4E': 'N',
	'0x4F': 'O',
	'0x50': 'P',
	'0x51': 'Q',
	'0x52': 'R',
	'0x53': 'S',
	'0x54': 'T',
	'0x55': 'U',
	'0x56': 'V',
	'0x57': 'W',
	'0x58': 'X',
	'0x59': 'Y',
	'0x5A': 'Z',
	'0x5B': 'bracketleft',
	'0x5C': 'backslash',
	'0x5D': 'bracketright',
	'0x5E': 'asciicircum',
	'0x5F': 'underscore',
	'0x60': 'grave',
	'0x61': 'a',
	'0x62': 'b',
	'0x63': 'c',
	'0x64': 'd',
	'0x65': 'e',
	'0x66': 'f',
	'0x67': 'g',
	'0x68': 'h',
	'0x69': 'i',
	'0x6A': 'j',
	'0x6B': 'k',
	'0x6C': 'l',
	'0x6D': 'm',
	'0x6E': 'n',
	'0x6F': 'o',
	'0x70': 'p',
	'0x71': 'q',
	'0x72': 'r',
	'0x73': 's',
	'0x74': 't',
	'0x75': 'u',
	'0x76': 'v',
	'0x77': 'w',
	'0x78': 'x',
	'0x79': 'y',
	'0x7A': 'z',
	'0x7B': 'braceleft',
	'0x7C': 'bar',
	'0x7D': 'braceright',
	'0x7E': 'asciitilde',
	'0xA1': 'exclamdown',
	'0xA2': 'cent',
	'0xA3': 'sterling',
	'0xA4': 'currency',
	'0xA5': 'yen',
	'0xA6': 'brokenbar',
	'0xA7': 'section',
	'0xA8': 'dieresis',
	'0xA9': 'copyright',
	'0xAA': 'ordfeminine',
	'0xAB': 'guillemotleft',
	'0xAC': 'logicalnot',
	'0xAE': 'registered',
	'0xAF': 'macron',
	'0xB0': 'degree',
	'0xB1': 'plusminus',
	'0xB4': 'acute',
	'0xB5': 'mu',
	'0xB6': 'paragraph',
	'0xB7': 'periodcentered',
	'0xB8': 'cedilla',
	'0xBA': 'ordmasculine',
	'0xBB': 'guillemotright',
	'0xBC': 'onequarter',
	'0xBD': 'onehalf',
	'0xBE': 'threequarters',
	'0xBF': 'questiondown',
	'0xC0': 'Agrave',
	'0xC1': 'Aacute',
	'0xC2': 'Acircumflex',
	'0xC3': 'Atilde',
	'0xC4': 'Adieresis',
	'0xC5': 'Aring',
	'0xC6': 'AE',
	'0xC7': 'Ccedilla',
	'0xC8': 'Egrave',
	'0xC9': 'Eacute',
	'0xCA': 'Ecircumflex',
	'0xCB': 'Edieresis',
	'0xCC': 'Igrave',
	'0xCD': 'Iacute',
	'0xCE': 'Icircumflex',
	'0xCF': 'Idieresis',
	'0xD0': 'Eth',
	'0xD1': 'Ntilde',
	'0xD2': 'Ograve',
	'0xD3': 'Oacute',
	'0xD4': 'Ocircumflex',
	'0xD5': 'Otilde',
	'0xD6': 'Odieresis',
	'0xD7': 'multiply',
	'0xD8': 'Oslash',
	'0xD9': 'Ugrave',
	'0xDA': 'Uacute',
	'0xDB': 'Ucircumflex',
	'0xDC': 'Udieresis',
	'0xDD': 'Yacute',
	'0xDE': 'Thorn',
	'0xDF': 'germandbls',
	'0xE0': 'agrave',
	'0xE1': 'aacute',
	'0xE2': 'acircumflex',
	'0xE3': 'atilde',
	'0xE4': 'adieresis',
	'0xE5': 'aring',
	'0xE6': 'ae',
	'0xE7': 'ccedilla',
	'0xE8': 'egrave',
	'0xE9': 'eacute',
	'0xEA': 'ecircumflex',
	'0xEB': 'edieresis',
	'0xEC': 'igrave',
	'0xED': 'iacute',
	'0xEE': 'icircumflex',
	'0xEF': 'idieresis',
	'0xF0': 'eth',
	'0xF1': 'ntilde',
	'0xF2': 'ograve',
	'0xF3': 'oacute',
	'0xF4': 'ocircumflex',
	'0xF5': 'otilde',
	'0xF6': 'odieresis',
	'0xF7': 'divide',
	'0xF8': 'oslash',
	'0xF9': 'ugrave',
	'0xFA': 'uacute',
	'0xFB': 'ucircumflex',
	'0xFC': 'udieresis',
	'0xFD': 'yacute',
	'0xFE': 'thorn',
	'0xFF': 'ydieresis',
	'0x100': 'Amacron',
	'0x101': 'amacron',
	'0x102': 'Abreve',
	'0x103': 'abreve',
	'0x104': 'Aogonek',
	'0x105': 'aogonek',
	'0x106': 'Cacute',
	'0x107': 'cacute',
	'0x108': 'Ccircumflex',
	'0x109': 'ccircumflex',
	'0x10A': 'Cdotaccent',
	'0x10B': 'cdotaccent',
	'0x10C': 'Ccaron',
	'0x10D': 'ccaron',
	'0x10E': 'Dcaron',
	'0x10F': 'dcaron',
	'0x110': 'Dcroat',
	'0x111': 'dcroat',
	'0x112': 'Emacron',
	'0x113': 'emacron',
	'0x114': 'Ebreve',
	'0x115': 'ebreve',
	'0x116': 'Edotaccent',
	'0x117': 'edotaccent',
	'0x118': 'Eogonek',
	'0x119': 'eogonek',
	'0x11A': 'Ecaron',
	'0x11B': 'ecaron',
	'0x11C': 'Gcircumflex',
	'0x11D': 'gcircumflex',
	'0x11E': 'Gbreve',
	'0x11F': 'gbreve',
	'0x120': 'Gdotaccent',
	'0x121': 'gdotaccent',
	'0x124': 'Hcircumflex',
	'0x125': 'hcircumflex',
	'0x126': 'Hbar',
	'0x127': 'hbar',
	'0x128': 'Itilde',
	'0x129': 'itilde',
	'0x12A': 'Imacron',
	'0x12B': 'imacron',
	'0x12C': 'Ibreve',
	'0x12D': 'ibreve',
	'0x12E': 'Iogonek',
	'0x12F': 'iogonek',
	'0x130': 'Idotaccent',
	'0x131': 'dotlessi',
	'0x132': 'IJ',
	'0x133': 'ij',
	'0x134': 'Jcircumflex',
	'0x135': 'jcircumflex',
	'0x138': 'kgreenlandic',
	'0x139': 'Lacute',
	'0x13A': 'lacute',
	'0x13D': 'Lcaron',
	'0x13E': 'lcaron',
	'0x13F': 'Ldot',
	'0x140': 'ldot',
	'0x141': 'Lslash',
	'0x142': 'lslash',
	'0x143': 'Nacute',
	'0x144': 'nacute',
	'0x147': 'Ncaron',
	'0x148': 'ncaron',
	'0x149': 'napostrophe',
	'0x14A': 'Eng',
	'0x14B': 'eng',
	'0x14C': 'Omacron',
	'0x14D': 'omacron',
	'0x14E': 'Obreve',
	'0x14F': 'obreve',
	'0x150': 'Ohungarumlaut',
	'0x151': 'ohungarumlaut',
	'0x152': 'OE',
	'0x153': 'oe',
	'0x154': 'Racute',
	'0x155': 'racute',
	'0x158': 'Rcaron',
	'0x159': 'rcaron',
	'0x15A': 'Sacute',
	'0x15B': 'sacute',
	'0x15C': 'Scircumflex',
	'0x15D': 'scircumflex',
	'0x15E': 'Scedilla',
	'0x15F': 'scedilla',
	'0x160': 'Scaron',
	'0x161': 'scaron',
	'0x164': 'Tcaron',
	'0x165': 'tcaron',
	'0x166': 'Tbar',
	'0x167': 'tbar',
	'0x168': 'Utilde',
	'0x169': 'utilde',
	'0x16A': 'Umacron',
	'0x16B': 'umacron',
	'0x16C': 'Ubreve',
	'0x16D': 'ubreve',
	'0x16E': 'Uring',
	'0x16F': 'uring',
	'0x170': 'Uhungarumlaut',
	'0x171': 'uhungarumlaut',
	'0x172': 'Uogonek',
	'0x173': 'uogonek',
	'0x174': 'Wcircumflex',
	'0x175': 'wcircumflex',
	'0x176': 'Ycircumflex',
	'0x177': 'ycircumflex',
	'0x178': 'Ydieresis',
	'0x179': 'Zacute',
	'0x17A': 'zacute',
	'0x17B': 'Zdotaccent',
	'0x17C': 'zdotaccent',
	'0x17D': 'Zcaron',
	'0x17E': 'zcaron',
	'0x17F': 'longs',
	'0x192': 'florin',
	'0x1A0': 'Ohorn',
	'0x1A1': 'ohorn',
	'0x1AF': 'Uhorn',
	'0x1B0': 'uhorn',
	'0x1E6': 'Gcaron',
	'0x1E7': 'gcaron',
	'0x1FA': 'Aringacute',
	'0x1FB': 'aringacute',
	'0x1FC': 'AEacute',
	'0x1FD': 'aeacute',
	'0x1FE': 'Oslashacute',
	'0x1FF': 'oslashacute',
	'0x2C6': 'circumflex',
	'0x2C7': 'caron',
	'0x2D8': 'breve',
	'0x2D9': 'dotaccent',
	'0x2DA': 'ring',
	'0x2DB': 'ogonek',
	'0x2DC': 'tilde',
	'0x2DD': 'hungarumlaut',
	'0x300': 'gravecomb',
	'0x301': 'acutecomb',
	'0x303': 'tildecomb',
	'0x309': 'hookabovecomb',
	'0x323': 'dotbelowcomb',
	'0x384': 'tonos',
	'0x385': 'dieresistonos',
	'0x386': 'Alphatonos',
	'0x387': 'anoteleia',
	'0x388': 'Epsilontonos',
	'0x389': 'Etatonos',
	'0x38A': 'Iotatonos',
	'0x38C': 'Omicrontonos',
	'0x38E': 'Upsilontonos',
	'0x38F': 'Omegatonos',
	'0x390': 'iotadieresistonos',
	'0x391': 'Alpha',
	'0x392': 'Beta',
	'0x393': 'Gamma',
	'0x395': 'Epsilon',
	'0x396': 'Zeta',
	'0x397': 'Eta',
	'0x398': 'Theta',
	'0x399': 'Iota',
	'0x39A': 'Kappa',
	'0x39B': 'Lambda',
	'0x39C': 'Mu',
	'0x39D': 'Nu',
	'0x39E': 'Xi',
	'0x39F': 'Omicron',
	'0x3A0': 'Pi',
	'0x3A1': 'Rho',
	'0x3A3': 'Sigma',
	'0x3A4': 'Tau',
	'0x3A5': 'Upsilon',
	'0x3A6': 'Phi',
	'0x3A7': 'Chi',
	'0x3A8': 'Psi',
	'0x3AA': 'Iotadieresis',
	'0x3AB': 'Upsilondieresis',
	'0x3AC': 'alphatonos',
	'0x3AD': 'epsilontonos',
	'0x3AE': 'etatonos',
	'0x3AF': 'iotatonos',
	'0x3B0': 'upsilondieresistonos',
	'0x3B1': 'alpha',
	'0x3B2': 'beta',
	'0x3B3': 'gamma',
	'0x3B4': 'delta',
	'0x3B5': 'epsilon',
	'0x3B6': 'zeta',
	'0x3B7': 'eta',
	'0x3B8': 'theta',
	'0x3B9': 'iota',
	'0x3BA': 'kappa',
	'0x3BB': 'lambda',
	'0x3BD': 'nu',
	'0x3BE': 'xi',
	'0x3BF': 'omicron',
	'0x3C0': 'pi',
	'0x3C1': 'rho',
	'0x3C2': 'sigma1',
	'0x3C3': 'sigma',
	'0x3C4': 'tau',
	'0x3C5': 'upsilon',
	'0x3C6': 'phi',
	'0x3C7': 'chi',
	'0x3C8': 'psi',
	'0x3C9': 'omega',
	'0x3CA': 'iotadieresis',
	'0x3CB': 'upsilondieresis',
	'0x3CC': 'omicrontonos',
	'0x3CD': 'upsilontonos',
	'0x3CE': 'omegatonos',
	'0x3D1': 'theta1',
	'0x3D2': 'Upsilon1',
	'0x3D5': 'phi1',
	'0x3D6': 'omega1',
	'0x1E80': 'Wgrave',
	'0x1E81': 'wgrave',
	'0x1E82': 'Wacute',
	'0x1E83': 'wacute',
	'0x1E84': 'Wdieresis',
	'0x1E85': 'wdieresis',
	'0x1EF2': 'Ygrave',
	'0x1EF3': 'ygrave',
	'0x2012': 'figuredash',
	'0x2013': 'endash',
	'0x2014': 'emdash',
	'0x2017': 'underscoredbl',
	'0x2018': 'quoteleft',
	'0x2019': 'quoteright',
	'0x201A': 'quotesinglbase',
	'0x201B': 'quotereversed',
	'0x201C': 'quotedblleft',
	'0x201D': 'quotedblright',
	'0x201E': 'quotedblbase',
	'0x2020': 'dagger',
	'0x2021': 'daggerdbl',
	'0x2022': 'bullet',
	'0x2024': 'onedotenleader',
	'0x2025': 'twodotenleader',
	'0x2026': 'ellipsis',
	'0x2030': 'perthousand',
	'0x2032': 'minute',
	'0x2033': 'second',
	'0x2039': 'guilsinglleft',
	'0x203A': 'guilsinglright',
	'0x203C': 'exclamdbl',
	'0x2044': 'fraction',
	'0x20A1': 'colonmonetary',
	'0x20A3': 'franc',
	'0x20A4': 'lira',
	'0x20A7': 'peseta',
	'0x20AB': 'dong',
	'0x20AC': 'Euro',
	'0x2111': 'Ifraktur',
	'0x2118': 'weierstrass',
	'0x211C': 'Rfraktur',
	'0x211E': 'prescription',
	'0x2122': 'trademark',
	'0x2126': 'Omega',
	'0x212E': 'estimated',
	'0x2135': 'aleph',
	'0x2153': 'onethird',
	'0x2154': 'twothirds',
	'0x215B': 'oneeighth',
	'0x215C': 'threeeighths',
	'0x215D': 'fiveeighths',
	'0x215E': 'seveneighths',
	'0x2190': 'arrowleft',
	'0x2191': 'arrowup',
	'0x2192': 'arrowright',
	'0x2193': 'arrowdown',
	'0x2194': 'arrowboth',
	'0x2195': 'arrowupdn',
	'0x21A8': 'arrowupdnbse',
	'0x21B5': 'carriagereturn',
	'0x21D0': 'arrowdblleft',
	'0x21D1': 'arrowdblup',
	'0x21D2': 'arrowdblright',
	'0x21D3': 'arrowdbldown',
	'0x21D4': 'arrowdblboth',
	'0x2200': 'universal',
	'0x2202': 'partialdiff',
	'0x2203': 'existential',
	'0x2205': 'emptyset',
	'0x2206': 'Delta',
	'0x2207': 'gradient',
	'0x2208': 'element',
	'0x2209': 'notelement',
	'0x220B': 'suchthat',
	'0x220F': 'product',
	'0x2211': 'summation',
	'0x2212': 'minus',
	'0x2217': 'asteriskmath',
	'0x221A': 'radical',
	'0x221D': 'proportional',
	'0x221E': 'infinity',
	'0x221F': 'orthogonal',
	'0x2220': 'angle',
	'0x2227': 'logicaland',
	'0x2228': 'logicalor',
	'0x2229': 'intersection',
	'0x222A': 'union',
	'0x222B': 'integral',
	'0x2234': 'therefore',
	'0x223C': 'similar',
	'0x2245': 'congruent',
	'0x2248': 'approxequal',
	'0x2260': 'notequal',
	'0x2261': 'equivalence',
	'0x2264': 'lessequal',
	'0x2265': 'greaterequal',
	'0x2282': 'propersubset',
	'0x2283': 'propersuperset',
	'0x2284': 'notsubset',
	'0x2286': 'reflexsubset',
	'0x2287': 'reflexsuperset',
	'0x2295': 'circleplus',
	'0x2297': 'circlemultiply',
	'0x22A5': 'perpendicular',
	'0x22C5': 'dotmath',
	'0x2302': 'house',
	'0x2310': 'revlogicalnot',
	'0x2320': 'integraltp',
	'0x2321': 'integralbt',
	'0x2329': 'angleleft',
	'0x232A': 'angleright',
	'0x2500': 'SF100000',
	'0x2502': 'SF110000',
	'0x250C': 'SF010000',
	'0x2510': 'SF030000',
	'0x2514': 'SF020000',
	'0x2518': 'SF040000',
	'0x251C': 'SF080000',
	'0x2524': 'SF090000',
	'0x252C': 'SF060000',
	'0x2534': 'SF070000',
	'0x253C': 'SF050000',
	'0x2550': 'SF430000',
	'0x2551': 'SF240000',
	'0x2552': 'SF510000',
	'0x2553': 'SF520000',
	'0x2554': 'SF390000',
	'0x2555': 'SF220000',
	'0x2556': 'SF210000',
	'0x2557': 'SF250000',
	'0x2558': 'SF500000',
	'0x2559': 'SF490000',
	'0x255A': 'SF380000',
	'0x255B': 'SF280000',
	'0x255C': 'SF270000',
	'0x255D': 'SF260000',
	'0x255E': 'SF360000',
	'0x255F': 'SF370000',
	'0x2560': 'SF420000',
	'0x2561': 'SF190000',
	'0x2562': 'SF200000',
	'0x2563': 'SF230000',
	'0x2564': 'SF470000',
	'0x2565': 'SF480000',
	'0x2566': 'SF410000',
	'0x2567': 'SF450000',
	'0x2568': 'SF460000',
	'0x2569': 'SF400000',
	'0x256A': 'SF540000',
	'0x256B': 'SF530000',
	'0x256C': 'SF440000',
	'0x2580': 'upblock',
	'0x2584': 'dnblock',
	'0x2588': 'block',
	'0x258C': 'lfblock',
	'0x2590': 'rtblock',
	'0x2591': 'ltshade',
	'0x2592': 'shade',
	'0x2593': 'dkshade',
	'0x25A0': 'filledbox',
	'0x25A1': 'H22073',
	'0x25AA': 'H18543',
	'0x25AB': 'H18551',
	'0x25AC': 'filledrect',
	'0x25B2': 'triagup',
	'0x25BA': 'triagrt',
	'0x25BC': 'triagdn',
	'0x25C4': 'triaglf',
	'0x25CA': 'lozenge',
	'0x25CB': 'circle',
	'0x25CF': 'H18533',
	'0x25D8': 'invbullet',
	'0x25D9': 'invcircle',
	'0x25E6': 'openbullet',
	'0x263A': 'smileface',
	'0x263B': 'invsmileface',
	'0x263C': 'sun',
	'0x2640': 'female',
	'0x2642': 'male',
	'0x2660': 'spade',
	'0x2663': 'club',
	'0x2665': 'heart',
	'0x2666': 'diamond',
	'0x266A': 'musicalnote',
	'0x266B': 'musicalnotedbl',
};
